#!/bin/bash
set -euo pipefail

aws(){
    docker run --rm -it \
        --user "$(id -u)" \
        --log-driver none \
        -e "AWS_ACCESS_KEY_ID" \
        -e "AWS_SECRET_ACCESS_KEY" \
        -e "AWS_DEFAULT_REGION" \
        -e "AWS_PAGER" \
        -v "${HOME}/downloads:/downloads" \
        --workdir "/downloads" \
        amazon/aws-cli "$@"
}

lock(){
    if [[ $XDG_SESSION_TYPE == "wayland" ]]; then
        hyprlock
        #swaylock \
        #    --screenshots \
        #    --clock \
        #    --indicator \
        #    --indicator-radius 100 \
        #    --indicator-thickness 7 \
        #    --effect-blur 7x5 \
        #    --effect-vignette 0.5:0.5 \
        #    --ring-color bb00cc \
        #    --key-hl-color 880033 \
        #    --line-color 00000000 \
        #    --inside-color 00000088 \
        #    --separator-color 00000000 \
        #    --inside-wrong-color 00000088 \
        #    --inside-ver-color 00000088 \
        #    --text-ver-color FFFFFF \
        #    --grace 2 \
        #    --fade-in 0.2
    else
        i3lock -t -i ~/.local/share/wallpapers/cowboy-4k.png
    fi
}

background(){
  nohup "$@" </dev/null &>/dev/null & disown
}

ff(){
  rm /tmp/bookmarks.html || true
  buku -e /tmp/bookmarks.html
  background firefox -p Tom --class browser-tom
}

ffmusic(){
  background firefox -p Music --name ffmusic --class browser-music
}

ffvpn(){
  background sudo -E chnetns nordvpn sudo -E su tom -c 'firefox -p Vpn --class browser-vpn'
}

ffclean(){
  PROFILEDIR=$(mktemp -p /tmp -d tmp-fx-profile.XXXXXX.d)
  firefox -profile "$PROFILEDIR" -no-remote -new-instance
  rm -rf "$PROFILEDIR"
}

pass_fuzz() {
    shopt -s nullglob globstar

    prefix=${PASSWORD_STORE_DIR-~/.password-store}
    password_files=( "$prefix"/**/*.gpg )
    password_files=( "${password_files[@]#"$prefix"/}" )
    password_files=( "${password_files[@]%.gpg}" )

    password=$(printf '%s\n' "${password_files[@]}" | fzf --prompt 'Copy pass > ')

    nohup pass show -c "${password}" &> /dev/null
}

otp_fuzz() {
    shopt -s nullglob globstar

    prefix=${PASSWORD_STORE_DIR-~/.password-store}
    password_files=( "$prefix"/**/*.gpg )
    password_files=( "${password_files[@]#"$prefix"/}" )
    password_files=( "${password_files[@]%.gpg}" )

    password=$(printf '%s\n' "${password_files[@]}" | grep otp | fzf --prompt 'Copy OTP > ')

    nohup pass otp -c "${password}" &> /dev/null
}

bookmarks() {
    buku -p -f 4 \
    | tail -n +2 \
    | sed 's/\t/ /g' \
    | fzf \
    | cut -d ' ' -f 2 \
    | nohup xclip -r -sel clip &> /dev/null
}

battery() {
    acpi -b | grep Bat | grep -m 1 -Eo " [0-9]+%" 2> /dev/null
}

scratchpad() {
    local SCRID=urxvt-scratch
    local focused=$(xdotool getactivewindow)
    local scratch=$(xdotool search --classname $SCRID)

    local win="scratch"
    if [[ ! -z ${1+x} ]]; then
        win=$1
        shift
    fi

    if [[ -n $scratch ]]; then
        cur=$(tmux display-message -t scratch -p '#W')
        tmux select-window -t scratch:$win || tmux new-window -a -t scratch -n $win "$@"
        if [[ $focused == $scratch ]]; then
            if [[ "$cur" == "$win" ]]; then
                bspc node -g hidden
            fi
        else
            bspc node $scratch -g hidden
            xdotool windowactivate $scratch
        fi
    else
        bspc monitor -f primary
        nohup urxvt \
            -name $SCRID \
            -geometry 100x26 \
            -bg '#fdf6e3' \
            -fg '#657b83' \
            -e bash \
            -c "tmux new-session -A -s scratch -n $win $*" </dev/null &>/dev/null & disown
    fi
}

nn() {
    # push pass db
    pass git push

    # documents add and push
    if [[ -d $HOME/documents/.git ]]; then
        local docs="${HOME}/documents"

        # keep a record of installed packages
        if hash pacman 2>/dev/null; then
          pacman -Qqen > "${docs}/pkglist.txt"
          pacman -Qqem > "${docs}/foreignpkglist.txt"
        fi

        (
            cd $docs && \
            git add -A && \
            git commit -am 'latest' && \
            git push
        ) || true
    fi

    # home shutdowns
    if hash dummy-home 2>/dev/null; then
        dummy home nn
    fi

    # update
    if [[ $(uname -s) == "Darwin" ]]; then
        brew update && brew upgrade
    else
        if hash pacman 2>/dev/null; then
            sudo pacman --noconfirm --color always -Syu
        fi

        if hash docker 2>/dev/null; then
            docker pull amazon/aws-cli:latest
            docker system prune -f
        fi

        if hash pip 2>/dev/null; then
            pip install --upgrade -r ~/.config/pip/requirements.txt --break-system-packages
        fi

        if hash composer 2>/dev/null; then
            composer global update
        fi

        if hash flatpak 2>/dev/null; then
            flatpak update -y
        fi
    fi

    #systemctl shutdown
    systemctl poweroff -i
    # reboot
}


docker_launch() {
    read -r line

    echo $line > /tmp/dlaunch

    action=`echo "${line}" | awk '{print $1;}'`

    if [ "${action}" == "mpv" ]
    then
        mpv ${line:4}
    elif [ "${action}" == "browser" ]
    then
        echo ${line:8} >> /tmp/dlaunch
        firefox -P Tom "${line:8}"
    elif [ "${action}" == "feh" ]
    then
        feh ${line:4}
    fi
}

timer() {
  if [[ ! -z ${1+x} ]]; then
    when=$1
    echo $when
    shift
  fi
  if [[ ! -z ${1+x} ]]; then
    what=$1
    shift
  fi

  if [[ ! -v when ]]; then
    echo -n 'When: '
    read -r when
  fi

  if [[ ! -v what ]]; then
    echo -n 'What: '
    read -r what
  fi

  termdown -T "${what}" "${when}" && echo "${what}" && paplay /usr/share/sounds/freedesktop/stereo/complete.oga
}

dummy_chatblade() {
  (
    export OPENAI_API_KEY=$(pass show chatgpt/api-chatblade)
    chatblade "$@"
  )
}

[ $# -gt 0 ] || exit 1

command="$1"
shift

case "$command" in
    audio)
        exec "$HOME/.local/bin/dummy-audio" "$@" ;;
    menu)
        exec "$HOME/.local/bin/dummy-menu" "$@" ;;
    timer)
        timer "$@"; exit 0 ;;
    pass)
        pass_fuzz; exit 0 ;;
    otp)
        otp_fuzz; exit 0 ;;
    bookmarks)
        bookmarks; exit 0 ;;
    battery)
        battery; exit 0 ;;
    scratch)
        scratchpad "$@"; exit 0 ;;
    nn)
        nn; exit 0 ;;
    home)
        exec "$HOME/.local/bin/dummy-home" "$@" ;;
    dlaunch)
        docker_launch "$@"; exit 0 ;;
    aws)
      aws "$@"; exit 0 ;;
    background)
      background "$@"; exit 0 ;;
    ff)
      ff "$@"; exit 0 ;;
    ffmusic)
      ffmusic "$@"; exit 0 ;;
    ffvpn)
      ffvpn "$@"; exit 0 ;;
    ffclean)
      ffclean "$@"; exit 0 ;;
    lock)
      lock "$@"; exit 0 ;;
    chatblade)
      dummy_chatblade "$@"; exit 0 ;;
    *)
        echo "`basename "$0"` $command: unknown command." >&2
        exit 1
        ;;
esac
